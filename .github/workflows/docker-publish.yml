name: Continuos Integration with Github

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ SECRETS.DOCKER_USERNAME }}
          password: ${{ SECRETS.DOCKER_PASSWORD }}

      - name: Setup Java JDK
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Build Eureka Naming Server Container Image
        working-directory: ./naming-server
        run: mvn spring-boot:build-image -DskipTests

      - name: Build API Gateway Container Image
        working-directory: ./api-gateway
        run: mvn spring-boot:build-image -DskipTests
        
      - name: Build Cambio Microservice Jar
        working-directory: ./cambio-service
        run: mvn clean package -DskipTests
        
      - name: Build Book Microservice Jar
        working-directory: ./book-service
        run: mvn clean package -DskipTests
        
      - name: Docker Compose Build
        working-directory: .
        run: docker-compose build
        
      - name: Push to Docker Hub Container Registry
        run: 
          docker tag ${{ SECRETS.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ SECRETS.DOCKER_USERNAME }}/naming-server:${{ github.run_id }}
          docker tag ${{ SECRETS.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ SECRETS.DOCKER_USERNAME }}/api-gateway:${{ github.run_id }}
          docker tag ${{ SECRETS.DOCKER_USERNAME }}/cambio-service:latest ${{ SECRETS.DOCKER_USERNAME }}/cambio-service:${{ github.run_id }}
          docker tag ${{ SECRETS.DOCKER_USERNAME }}/book-service:latest ${{ SECRETS.DOCKER_USERNAME }}/book-service:${{ github.run_id }}
          docker push ${{ SECRETS.DOCKER_USERNAME }}/naming-server:${{ github.run_id }}
          docker push ${{ SECRETS.DOCKER_USERNAME }}/api-gateway:${{ github.run_id }}
          docker push ${{ SECRETS.DOCKER_USERNAME }}/cambio-service:${{ github.run_id }}
          docker push ${{ SECRETS.DOCKER_USERNAME }}/book-service:${{ github.run_id }}
